{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-ca6c2a78d1a583a0.js","src/workers/worker.ts","node_modules/comlink/src/comlink.ts","src/workers/terrainGenerator.ts","src/workers/Buffer.ts","node_modules/simplex-noise/simplex-noise.ts","node_modules/wasm-gzip/wasm_gzip.js","node_modules/@parcel/runtime-js/lib/runtime-d69470015c3cca54.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"6C7OB\\\":\\\"worker.1fc3db97.js\\\",\\\"3fypB\\\":\\\"wasm_gzip_bg.87c57404.wasm\\\"}\"));","import * as Comlink from \"comlink\";\nimport * as Chunk from \"./terrainGenerator\";\n\nfunction canHandle(obj: any): obj is unknown {\n    console.log(obj.constructor.name);\n    return (obj instanceof Chunk.ChunkData)\n}\n\nfunction serializeBufferView(bufferView: Chunk.BufferView): typeof Comlink.transfer | SharedArrayBuffer {\n    if (bufferView.isShared) return bufferView.values;\n    return Comlink.transfer(bufferView.values, [bufferView.values.buffer]);    \n}\n\nlet functionSandbox = Object.create(null);\nObject.assign(functionSandbox, Chunk)\nComlink.expose(functionSandbox)","/**\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  EventSource,\n  Message,\n  MessageType,\n  PostMessageWithOrigin,\n  WireValue,\n  WireValueType,\n} from \"./protocol\";\nexport { Endpoint };\n\nexport const proxyMarker = Symbol(\"Comlink.proxy\");\nexport const createEndpoint = Symbol(\"Comlink.endpoint\");\nexport const releaseProxy = Symbol(\"Comlink.releaseProxy\");\n\nconst throwMarker = Symbol(\"Comlink.thrown\");\n\n/**\n * Interface of values that were marked to be proxied with `comlink.proxy()`.\n * Can also be implemented by classes.\n */\nexport interface ProxyMarked {\n  [proxyMarker]: true;\n}\n\n/**\n * Takes a type and wraps it in a Promise, if it not already is one.\n * This is to avoid `Promise<Promise<T>>`.\n *\n * This is the inverse of `Unpromisify<T>`.\n */\ntype Promisify<T> = T extends Promise<unknown> ? T : Promise<T>;\n/**\n * Takes a type that may be Promise and unwraps the Promise type.\n * If `P` is not a Promise, it returns `P`.\n *\n * This is the inverse of `Promisify<T>`.\n */\ntype Unpromisify<P> = P extends Promise<infer T> ? T : P;\n\n/**\n * Takes the raw type of a remote property and returns the type that is visible to the local thread on the proxy.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions.\n * See https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype RemoteProperty<T> =\n  // If the value is a method, comlink will proxy it automatically.\n  // Objects are only proxied if they are marked to be proxied.\n  // Otherwise, the property is converted to a Promise that resolves the cloned value.\n  T extends Function | ProxyMarked ? Remote<T> : Promisify<T>;\n\n/**\n * Takes the raw type of a property as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This is the inverse of `RemoteProperty<T>`.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions. See\n * https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype LocalProperty<T> = T extends Function | ProxyMarked\n  ? Local<T>\n  : Unpromisify<T>;\n\n/**\n * Proxies `T` if it is a `ProxyMarked`, clones it otherwise (as handled by structured cloning and transfer handlers).\n */\nexport type ProxyOrClone<T> = T extends ProxyMarked ? Remote<T> : T;\n/**\n * Inverse of `ProxyOrClone<T>`.\n */\nexport type UnproxyOrClone<T> = T extends RemoteObject<ProxyMarked>\n  ? Local<T>\n  : T;\n\n/**\n * Takes the raw type of a remote object in the other thread and returns the type as it is visible to the local thread\n * when proxied with `Comlink.proxy()`.\n *\n * This does not handle call signatures, which is handled by the more general `Remote<T>` type.\n *\n * @template T The raw type of a remote object as seen in the other thread.\n */\nexport type RemoteObject<T> = { [P in keyof T]: RemoteProperty<T[P]> };\n/**\n * Takes the type of an object as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This does not handle call signatures, which is handled by the more general `Local<T>` type.\n *\n * This is the inverse of `RemoteObject<T>`.\n *\n * @template T The type of a proxied object.\n */\nexport type LocalObject<T> = { [P in keyof T]: LocalProperty<T[P]> };\n\n/**\n * Additional special comlink methods available on each proxy returned by `Comlink.wrap()`.\n */\nexport interface ProxyMethods {\n  [createEndpoint]: () => Promise<MessagePort>;\n  [releaseProxy]: () => void;\n}\n\n/**\n * Takes the raw type of a remote object, function or class in the other thread and returns the type as it is visible to\n * the local thread from the proxy return value of `Comlink.wrap()` or `Comlink.proxy()`.\n */\nexport type Remote<T> =\n  // Handle properties\n  RemoteObject<T> &\n    // Handle call signature (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: UnproxyOrClone<TArguments[I]> }\n        ) => Promisify<ProxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: UnproxyOrClone<TArguments[I]>;\n            }\n          ): Promisify<Remote<TInstance>>;\n        }\n      : unknown) &\n    // Include additional special comlink methods available on the proxy.\n    ProxyMethods;\n\n/**\n * Expresses that a type can be either a sync or async.\n */\ntype MaybePromise<T> = Promise<T> | T;\n\n/**\n * Takes the raw type of a remote object, function or class as a remote thread would see it through a proxy (e.g. when\n * passed in as a function argument) and returns the type the local thread has to supply.\n *\n * This is the inverse of `Remote<T>`. It takes a `Remote<T>` and returns its original input `T`.\n */\nexport type Local<T> =\n  // Omit the special proxy methods (they don't need to be supplied, comlink adds them)\n  Omit<LocalObject<T>, keyof ProxyMethods> &\n    // Handle call signatures (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: ProxyOrClone<TArguments[I]> }\n        ) => // The raw function could either be sync or async, but is always proxied automatically\n        MaybePromise<UnproxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: ProxyOrClone<TArguments[I]>;\n            }\n          ): // The raw constructor could either be sync or async, but is always proxied automatically\n          MaybePromise<Local<Unpromisify<TInstance>>>;\n        }\n      : unknown);\n\nconst isObject = (val: unknown): val is object =>\n  (typeof val === \"object\" && val !== null) || typeof val === \"function\";\n\n/**\n * Customizes the serialization of certain values as determined by `canHandle()`.\n *\n * @template T The input type being handled by this transfer handler.\n * @template S The serialized type sent over the wire.\n */\nexport interface TransferHandler<T, S> {\n  /**\n   * Gets called for every value to determine whether this transfer handler\n   * should serialize the value, which includes checking that it is of the right\n   * type (but can perform checks beyond that as well).\n   */\n  canHandle(value: unknown): value is T;\n\n  /**\n   * Gets called with the value if `canHandle()` returned `true` to produce a\n   * value that can be sent in a message, consisting of structured-cloneable\n   * values and/or transferrable objects.\n   */\n  serialize(value: T): [S, Transferable[]];\n\n  /**\n   * Gets called to deserialize an incoming value that was serialized in the\n   * other thread with this transfer handler (known through the name it was\n   * registered under).\n   */\n  deserialize(value: S): T;\n}\n\n/**\n * Internal transfer handle to handle objects marked to proxy.\n */\nconst proxyTransferHandler: TransferHandler<object, MessagePort> = {\n  canHandle: (val): val is ProxyMarked =>\n    isObject(val) && (val as ProxyMarked)[proxyMarker],\n  serialize(obj) {\n    const { port1, port2 } = new MessageChannel();\n    expose(obj, port1);\n    return [port2, [port2]];\n  },\n  deserialize(port) {\n    port.start();\n    return wrap(port);\n  },\n};\n\ninterface ThrownValue {\n  [throwMarker]: unknown; // just needs to be present\n  value: unknown;\n}\ntype SerializedThrownValue =\n  | { isError: true; value: Error }\n  | { isError: false; value: unknown };\n\n/**\n * Internal transfer handler to handle thrown exceptions.\n */\nconst throwTransferHandler: TransferHandler<\n  ThrownValue,\n  SerializedThrownValue\n> = {\n  canHandle: (value): value is ThrownValue =>\n    isObject(value) && throwMarker in value,\n  serialize({ value }) {\n    let serialized: SerializedThrownValue;\n    if (value instanceof Error) {\n      serialized = {\n        isError: true,\n        value: {\n          message: value.message,\n          name: value.name,\n          stack: value.stack,\n        },\n      };\n    } else {\n      serialized = { isError: false, value };\n    }\n    return [serialized, []];\n  },\n  deserialize(serialized) {\n    if (serialized.isError) {\n      throw Object.assign(\n        new Error(serialized.value.message),\n        serialized.value\n      );\n    }\n    throw serialized.value;\n  },\n};\n\n/**\n * Allows customizing the serialization of certain values.\n */\nexport const transferHandlers = new Map<\n  string,\n  TransferHandler<unknown, unknown>\n>([\n  [\"proxy\", proxyTransferHandler],\n  [\"throw\", throwTransferHandler],\n]);\n\nexport function expose(obj: any, ep: Endpoint = self as any) {\n  ep.addEventListener(\"message\", function callback(ev: MessageEvent) {\n    if (!ev || !ev.data) {\n      return;\n    }\n    const { id, type, path } = {\n      path: [] as string[],\n      ...(ev.data as Message),\n    };\n    const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n    let returnValue;\n    try {\n      const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\n      const rawValue = path.reduce((obj, prop) => obj[prop], obj);\n      switch (type) {\n        case MessageType.GET:\n          {\n            returnValue = rawValue;\n          }\n          break;\n        case MessageType.SET:\n          {\n            parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n            returnValue = true;\n          }\n          break;\n        case MessageType.APPLY:\n          {\n            returnValue = rawValue.apply(parent, argumentList);\n          }\n          break;\n        case MessageType.CONSTRUCT:\n          {\n            const value = new rawValue(...argumentList);\n            returnValue = proxy(value);\n          }\n          break;\n        case MessageType.ENDPOINT:\n          {\n            const { port1, port2 } = new MessageChannel();\n            expose(obj, port2);\n            returnValue = transfer(port1, [port1]);\n          }\n          break;\n        case MessageType.RELEASE:\n          {\n            returnValue = undefined;\n          }\n          break;\n        default:\n          return;\n      }\n    } catch (value) {\n      returnValue = { value, [throwMarker]: 0 };\n    }\n    Promise.resolve(returnValue)\n      .catch((value) => {\n        return { value, [throwMarker]: 0 };\n      })\n      .then((returnValue) => {\n        const [wireValue, transferables] = toWireValue(returnValue);\n        ep.postMessage({ ...wireValue, id }, transferables);\n        if (type === MessageType.RELEASE) {\n          // detach and deactive after sending release response above.\n          ep.removeEventListener(\"message\", callback as any);\n          closeEndPoint(ep);\n        }\n      });\n  } as any);\n  if (ep.start) {\n    ep.start();\n  }\n}\n\nfunction isMessagePort(endpoint: Endpoint): endpoint is MessagePort {\n  return endpoint.constructor.name === \"MessagePort\";\n}\n\nfunction closeEndPoint(endpoint: Endpoint) {\n  if (isMessagePort(endpoint)) endpoint.close();\n}\n\nexport function wrap<T>(ep: Endpoint, target?: any): Remote<T> {\n  return createProxy<T>(ep, [], target) as any;\n}\n\nfunction throwIfProxyReleased(isReleased: boolean) {\n  if (isReleased) {\n    throw new Error(\"Proxy has been released and is not useable\");\n  }\n}\n\nfunction createProxy<T>(\n  ep: Endpoint,\n  path: (string | number | symbol)[] = [],\n  target: object = function () {}\n): Remote<T> {\n  let isProxyReleased = false;\n  const proxy = new Proxy(target, {\n    get(_target, prop) {\n      throwIfProxyReleased(isProxyReleased);\n      if (prop === releaseProxy) {\n        return () => {\n          return requestResponseMessage(ep, {\n            type: MessageType.RELEASE,\n            path: path.map((p) => p.toString()),\n          }).then(() => {\n            closeEndPoint(ep);\n            isProxyReleased = true;\n          });\n        };\n      }\n      if (prop === \"then\") {\n        if (path.length === 0) {\n          return { then: () => proxy };\n        }\n        const r = requestResponseMessage(ep, {\n          type: MessageType.GET,\n          path: path.map((p) => p.toString()),\n        }).then(fromWireValue);\n        return r.then.bind(r);\n      }\n      return createProxy(ep, [...path, prop]);\n    },\n    set(_target, prop, rawValue) {\n      throwIfProxyReleased(isProxyReleased);\n      // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n      // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\n      const [value, transferables] = toWireValue(rawValue);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.SET,\n          path: [...path, prop].map((p) => p.toString()),\n          value,\n        },\n        transferables\n      ).then(fromWireValue) as any;\n    },\n    apply(_target, _thisArg, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const last = path[path.length - 1];\n      if ((last as any) === createEndpoint) {\n        return requestResponseMessage(ep, {\n          type: MessageType.ENDPOINT,\n        }).then(fromWireValue);\n      }\n      // We just pretend that `bind()` didn’t happen.\n      if (last === \"bind\") {\n        return createProxy(ep, path.slice(0, -1));\n      }\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.APPLY,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n    construct(_target, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.CONSTRUCT,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n  });\n  return proxy as any;\n}\n\nfunction myFlat<T>(arr: (T | T[])[]): T[] {\n  return Array.prototype.concat.apply([], arr);\n}\n\nfunction processArguments(argumentList: any[]): [WireValue[], Transferable[]] {\n  const processed = argumentList.map(toWireValue);\n  return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\n}\n\nconst transferCache = new WeakMap<any, Transferable[]>();\nexport function transfer<T>(obj: T, transfers: Transferable[]): T {\n  transferCache.set(obj, transfers);\n  return obj;\n}\n\nexport function proxy<T>(obj: T): T & ProxyMarked {\n  return Object.assign(obj, { [proxyMarker]: true }) as any;\n}\n\nexport function windowEndpoint(\n  w: PostMessageWithOrigin,\n  context: EventSource = self,\n  targetOrigin = \"*\"\n): Endpoint {\n  return {\n    postMessage: (msg: any, transferables: Transferable[]) =>\n      w.postMessage(msg, targetOrigin, transferables),\n    addEventListener: context.addEventListener.bind(context),\n    removeEventListener: context.removeEventListener.bind(context),\n  };\n}\n\nfunction toWireValue(value: any): [WireValue, Transferable[]] {\n  for (const [name, handler] of transferHandlers) {\n    if (handler.canHandle(value)) {\n      const [serializedValue, transferables] = handler.serialize(value);\n      return [\n        {\n          type: WireValueType.HANDLER,\n          name,\n          value: serializedValue,\n        },\n        transferables,\n      ];\n    }\n  }\n  return [\n    {\n      type: WireValueType.RAW,\n      value,\n    },\n    transferCache.get(value) || [],\n  ];\n}\n\nfunction fromWireValue(value: WireValue): any {\n  switch (value.type) {\n    case WireValueType.HANDLER:\n      return transferHandlers.get(value.name)!.deserialize(value.value);\n    case WireValueType.RAW:\n      return value.value;\n  }\n}\n\nfunction requestResponseMessage(\n  ep: Endpoint,\n  msg: Message,\n  transfers?: Transferable[]\n): Promise<WireValue> {\n  return new Promise((resolve) => {\n    const id = generateUUID();\n    ep.addEventListener(\"message\", function l(ev: MessageEvent) {\n      if (!ev.data || !ev.data.id || ev.data.id !== id) {\n        return;\n      }\n      ep.removeEventListener(\"message\", l as any);\n      resolve(ev.data);\n    } as any);\n    if (ep.start) {\n      ep.start();\n    }\n    ep.postMessage({ id, ...msg }, transfers);\n  });\n}\n\nfunction generateUUID(): string {\n  return new Array(4)\n    .fill(0)\n    .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\n    .join(\"-\");\n}\n","import * as Comlink from \"comlink\";\nimport { BufferView, ObjectBuffer, TypedArray} from \"./Buffer\";\nimport SimplexNoise from \"simplex-noise\"\nimport init, { compressGzip } from \"wasm-gzip\";\n\ntype self = {[key: string]: any}\nconst simplexNoise = new SimplexNoise(\"[Version-1]\");\n\nconst MATRICES: Array<[number, number[]]> = [\n    [0, [0, 1, 0]],\n    [1, [0, -1, 0]],\n    [2, [-1, 0, 0]],\n    [3, [1, 0, 0]],\n    [4, [0, 0, 1]],\n    [5, [0, 0, -1]]\n];\n\nconst euclidianMod = (a: number, b: number) => ((a % b) + b ) % b;\n\nconst noiseMapCache = new Map();\n(<any>self).noiseMapCache = noiseMapCache;\n\nclass ChunkData<Type> {\n    colliderBoxBuffer: Type\n    terrainFaceBuffer: Type\n    waterFaceBuffer: Type\n    colliderJumpTable: Type\n    heightBoundaries: number[]\n    chunkSize: number[]\n\n    constructor(object: any) {\n        return object;\n    };\n}\n\nfunction noiseMap(offsetX: number, offsetY: number, width: number, height: number, seeds: number[], octave = 1): Int16Array {\n    const chunkSize = [width, height];\n    const array = new Int16Array((width + 2) * (height + 2));\n    for (let x = 0; x < chunkSize[0] + 2; x++) {\n        for (let y = 0; y < chunkSize[1] + 2; y++) {\n            let value = 0;\n            for (let i = 0; i < 5; i++) {\n                const divisor = 5 ** ((i + 1) * 0.55) * 10;\n                const transformedX = ((x + offsetX) / divisor);\n                const transformedY = ((y + offsetY) / divisor);\n                value += 4 * 2 ** (i + 1) * simplexNoise.noise2D(transformedY + seeds[i], transformedX - seeds[i]);\n            }\n            array[x * (width+2) + y] = value;\n        }   \n    }\n    return array;\n}\n\nfunction getBlockType(x: number, y: number, blockY: number, z: number): number {\n    const randomizer = ~~(Math.random() * 2) - 1\n    if (y > 100 + randomizer) {\n        return 2\n    } else if (y == blockY && y > 5 + randomizer) {\n        return 0;\n    } else if (y <= 5 + randomizer && y >= -12 + randomizer) {\n        return 1;\n    } else {\n        return 2;\n    }\n}\n\nfunction createChunkData(chunk: number[], chunkSize: number[], seeds: number[]) {\n    const i = 0;\n    //layout: iVec3 position, int faceIndex, int uvIndex, Vec3 arrayIndex;\n    const stringifiedChunkXZ = [chunk[0], chunk[2]].join(\",\");\n    let terrain = noiseMapCache.get(stringifiedChunkXZ);\n\n    if (!terrain) {\n        terrain = noiseMap(\n            chunk[2] * chunkSize[2],\n            chunk[0] * chunkSize[0],\n            chunkSize[2],\n            chunkSize[0],\n            seeds\n        );\n        noiseMapCache.set(stringifiedChunkXZ, terrain);\n    }\n\n    const colliderBoxBuffer = new ObjectBuffer(Int8Array, chunkSize[0] * chunkSize[2] * 4 * 3 * 2 * 2);\n    const terrainFaceBuffer = new ObjectBuffer(Int8Array, chunkSize[0] * chunkSize[2] * chunkSize[1] / 3 * 3 * 2 * 2);\n    const waterFaceBuffer = new ObjectBuffer(Int8Array, chunkSize[0] * chunkSize[2] * 2);\n    const colliderJumpTable = new ObjectBuffer(Int16Array, chunkSize[0] * chunkSize[2]);\n    const heightBoundaries = [];\n    for (let z = 0; z < chunkSize[2]; z++) {\n        for (let x = 0; x < chunkSize[0]; x++) {\n\n            const blockY = terrain[(z + 1) * (chunkSize[0] + 2) + x + 1];\n            if (blockY <= 0) waterFaceBuffer.push(x - chunkSize[0] / 2, z - chunkSize[0] / 2);\n            if (blockY > heightBoundaries[1]) heightBoundaries[1] = blockY;\n            if (blockY < heightBoundaries[0]) heightBoundaries[0] = blockY;\n            colliderJumpTable.push(colliderBoxBuffer.used)\n            const minY = chunkSize[1] * (chunk[1]);\n            if (blockY < minY || blockY > minY + chunkSize[1]) continue;\n            \n            for (let y = blockY; y >= minY; y--) {\n                \n                let facesPlaced = false;\n                const index: number = getBlockType(x, y, blockY, z);\n                const oldY = 100;/*Math.floor(simplexNoise.noise3D(\n                    (x + chunk[0] * chunkSize[0]) / 20,\n                    (y + chunk[1] * chunkSize[1]) / 20,\n                    (z + chunk[2] * chunkSize[2]) / 20) * 51)*/\n\n                const min = 35;\n                const max = 20;\n\n                for (const [faceId, direction] of MATRICES) {\n                    const number = Math.floor(simplexNoise.noise3D(\n                        (x + chunk[0] * chunkSize[0] + direction[0]) / 80,\n                        (y + chunk[1] * chunkSize[1] + direction[1]) / 80,\n                        (z + chunk[2] * chunkSize[2] + direction[2]) / 80) * 50);\n                    \n                    const blockY2: number = terrain[(z + direction[2] + 1) * (chunkSize[0] + 2) + x + 1 + direction[0]];\n                    \n                    if (blockY2 >= y + direction[1]) continue;\n\n                    terrainFaceBuffer.push(\n                        x - chunkSize[0]/2,\n                        euclidianMod(y, chunkSize[1]),\n                        z - chunkSize[2]/2,\n                        index * 24 + 4 * (faceId as number) + Math.round((x^z) % 4) - 127\n                    );\n                    \n                    facesPlaced = true;\n                }\n                if (facesPlaced) colliderBoxBuffer.push(x - chunkSize[0] / 2, euclidianMod(y, chunkSize[1]), z - chunkSize[0] / 2);\n            }\n        }\n    }\n\n    const seri = terrainFaceBuffer.serialize();\n\n    init(new URL('../../node_modules/wasm-gzip/wasm_gzip_bg.wasm', import.meta.url)).then(() => {\n        const old = performance.now();\n        const gzipped = compressGzip(new Uint8Array(seri.buffer));\n        const delta = performance.now() - old;\n\n    })\n\n    return new ChunkData<typeof Comlink.transfer | TypedArray>({\n        colliderBoxBuffer: colliderBoxBuffer.serialize(),\n        terrainFaceBuffer: terrainFaceBuffer.serialize(),\n        waterFaceBuffer: waterFaceBuffer.serialize(),\n        colliderJumpTable: colliderJumpTable.serialize(),\n        heightBoundaries,\n        chunkSize\n    });\n\n    \n}\n\nfunction makeChunks(chunks: number[][], chunkSize: any[], seeds: number[]) {\n    const objects: Array<ChunkData<typeof Comlink.transfer | TypedArray>> = []\n    for (const chunk of chunks) {\n        objects.push(createChunkData(chunk, chunkSize, seeds));\n    }\n    return objects;\n}\n\nexport { makeChunks, createChunkData, ChunkData, BufferView} ","import {transfer} from \"comlink\"\n\ntype TypedArray =\n    Uint8Array | Uint16Array | Uint32Array | BigUint64Array |\n    Int8Array | Int16Array | Int32Array | BigInt64Array |\n    Float32Array | Float64Array\n\nexport class BufferView {\n    isShared = false;\n    values: any;\n    constructor(Class: any, items: number[]) {\n        this.values = new Class(this.createBuffer(items.length))\n        this.values.set(items, 0);\n        if (!this.isShared) this.values = transfer(this.values, [this.values.buffer]);\n    }\n\n    createBuffer(size: number) {\n        // if (\"SharedArrayBuffer\" in self) {\n        //     this.isShared = true;\n        //     return new SharedArrayBuffer(size) as any\n        // }\n        const arrayBuffer = new ArrayBuffer(size);\n        return arrayBuffer;\n    }\n}\n\nexport class ObjectBuffer {\n    view: TypedArray\n    used = 0\n    length: number\n    isShared = false\n    constructor(TypedArrayClass: any, maxLength: number) {\n        maxLength = Math.ceil(maxLength);\n        this.view = new TypedArrayClass(this.createBuffer(maxLength, TypedArrayClass.BYTES_PER_ELEMENT));\n        this.length = maxLength;\n    }\n\n    push(...items: Array<number | bigint>): number {\n        this.view.set(items as ArrayLike<number> & ArrayLike<bigint>, this.used);\n        this.used += items.length;\n        return this.used;\n    }\n\n    createBuffer(size: number, BYTES_PER_ELEMENT: number) {\n        if (\"SharedArrayBuffer\" in self) {\n            this.isShared = true;\n            return new SharedArrayBuffer(size * BYTES_PER_ELEMENT) as any\n        }\n        const arrayBuffer = new ArrayBuffer(size * BYTES_PER_ELEMENT);\n        return arrayBuffer;\n    }\n\n    serialize(): typeof transfer | TypedArray {\n        const typedArray = (this.used < this.length) ? this.view.slice(0, this.used) : this.view\n        if (this.isShared) return typedArray;\n        return transfer(typedArray, [typedArray.buffer]);\n    }\n}\n\nexport {TypedArray}\n\n\n\n","/*\n * A fast javascript implementation of simplex noise by Jonas Wagner\n\nBased on a speed-improved simplex noise algorithm for 2D, 3D and 4D in Java.\nWhich is based on example code by Stefan Gustavson (stegu@itn.liu.se).\nWith Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\nBetter rank ordering method by Stefan Gustavson in 2012.\n\n Copyright (c) 2021 Jonas Wagner\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n */\n\nconst F2 = 0.5 * (Math.sqrt(3.0) - 1.0);\nconst G2 = (3.0 - Math.sqrt(3.0)) / 6.0;\nconst F3 = 1.0 / 3.0;\nconst G3 = 1.0 / 6.0;\nconst F4 = (Math.sqrt(5.0) - 1.0) / 4.0;\nconst G4 = (5.0 - Math.sqrt(5.0)) / 20.0;\n\nconst grad3 = new Float32Array([1, 1, 0,\n  -1, 1, 0,\n  1, -1, 0,\n\n  -1, -1, 0,\n  1, 0, 1,\n  -1, 0, 1,\n\n  1, 0, -1,\n  -1, 0, -1,\n  0, 1, 1,\n\n  0, -1, 1,\n  0, 1, -1,\n  0, -1, -1]);\n\nconst grad4 = new Float32Array([0, 1, 1, 1, 0, 1, 1, -1, 0, 1, -1, 1, 0, 1, -1, -1,\n  0, -1, 1, 1, 0, -1, 1, -1, 0, -1, -1, 1, 0, -1, -1, -1,\n  1, 0, 1, 1, 1, 0, 1, -1, 1, 0, -1, 1, 1, 0, -1, -1,\n  -1, 0, 1, 1, -1, 0, 1, -1, -1, 0, -1, 1, -1, 0, -1, -1,\n  1, 1, 0, 1, 1, 1, 0, -1, 1, -1, 0, 1, 1, -1, 0, -1,\n  -1, 1, 0, 1, -1, 1, 0, -1, -1, -1, 0, 1, -1, -1, 0, -1,\n  1, 1, 1, 0, 1, 1, -1, 0, 1, -1, 1, 0, 1, -1, -1, 0,\n  -1, 1, 1, 0, -1, 1, -1, 0, -1, -1, 1, 0, -1, -1, -1, 0]);\n\n/**\n * A random() function, must return a numer in the interval [0,1), just like Math.random().\n */ \nexport type RandomFn = () => number;\n\n/** Deterministic simplex noise generator suitable for 2D, 3D and 4D spaces. */\nexport class SimplexNoise {\n  private p: Uint8Array;\n  private perm: Uint8Array;\n  private permMod12: Uint8Array;\n  /**\n   * Creates a new `SimplexNoise` instance.\n   * This involves some setup. You can save a few cpu cycles by reusing the same instance.\n   * @param randomOrSeed A random number generator or a seed (string|number).\n   * Defaults to Math.random (random irreproducible initialization).\n   */\n  constructor(randomOrSeed: RandomFn|string|number = Math.random) {\n    const random = typeof randomOrSeed == 'function' ? randomOrSeed : alea(randomOrSeed);\n    this.p = buildPermutationTable(random);\n    this.perm = new Uint8Array(512);\n    this.permMod12 = new Uint8Array(512);\n    for (let i = 0; i < 512; i++) {\n      this.perm[i] = this.p[i & 255];\n      this.permMod12[i] = this.perm[i] % 12;\n    }\n  }\n\n  /**\n   * Samples the noise field in 2 dimensions\n   * @param x\n   * @param y \n   * @returns a number in the interval [-1, 1]\n   */\n  noise2D(x: number, y: number): number {\n    const permMod12 = this.permMod12;\n    const perm = this.perm;\n    let n0 = 0; // Noise contributions from the three corners\n    let n1 = 0;\n    let n2 = 0;\n    // Skew the input space to determine which simplex cell we're in\n    const s = (x + y) * F2; // Hairy factor for 2D\n    const i = Math.floor(x + s);\n    const j = Math.floor(y + s);\n    const t = (i + j) * G2;\n    const X0 = i - t; // Unskew the cell origin back to (x,y) space\n    const Y0 = j - t;\n    const x0 = x - X0; // The x,y distances from the cell origin\n    const y0 = y - Y0;\n    // For the 2D case, the simplex shape is an equilateral triangle.\n    // Determine which simplex we are in.\n    let i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n    if (x0 > y0) {\n      i1 = 1;\n      j1 = 0;\n    } // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n    else {\n      i1 = 0;\n      j1 = 1;\n    } // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n    // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n    // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n    // c = (3-sqrt(3))/6\n    const x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n    const y1 = y0 - j1 + G2;\n    const x2 = x0 - 1.0 + 2.0 * G2; // Offsets for last corner in (x,y) unskewed coords\n    const y2 = y0 - 1.0 + 2.0 * G2;\n    // Work out the hashed gradient indices of the three simplex corners\n    const ii = i & 255;\n    const jj = j & 255;\n    // Calculate the contribution from the three corners\n    let t0 = 0.5 - x0 * x0 - y0 * y0;\n    if (t0 >= 0) {\n      const gi0 = permMod12[ii + perm[jj]] * 3;\n      t0 *= t0;\n      n0 = t0 * t0 * (grad3[gi0] * x0 + grad3[gi0 + 1] * y0); // (x,y) of grad3 used for 2D gradient\n    }\n    let t1 = 0.5 - x1 * x1 - y1 * y1;\n    if (t1 >= 0) {\n      const gi1 = permMod12[ii + i1 + perm[jj + j1]] * 3;\n      t1 *= t1;\n      n1 = t1 * t1 * (grad3[gi1] * x1 + grad3[gi1 + 1] * y1);\n    }\n    let t2 = 0.5 - x2 * x2 - y2 * y2;\n    if (t2 >= 0) {\n      const gi2 = permMod12[ii + 1 + perm[jj + 1]] * 3;\n      t2 *= t2;\n      n2 = t2 * t2 * (grad3[gi2] * x2 + grad3[gi2 + 1] * y2);\n    }\n    // Add contributions from each corner to get the final noise value.\n    // The result is scaled to return values in the interval [-1,1].\n    return 70.0 * (n0 + n1 + n2);\n  }\n\n  /**\n   * Samples the noise field in 3 dimensions\n   * @param x \n   * @param y \n   * @param z \n   * @returns a number in the interval [-1, 1]\n   */\n  noise3D(x:number, y:number, z:number): number {\n    const permMod12 = this.permMod12;\n    const perm = this.perm;\n    let n0, n1, n2, n3; // Noise contributions from the four corners\n    // Skew the input space to determine which simplex cell we're in\n    const s = (x + y + z) * F3; // Very nice and simple skew factor for 3D\n    const i = Math.floor(x + s);\n    const j = Math.floor(y + s);\n    const k = Math.floor(z + s);\n    const t = (i + j + k) * G3;\n    const X0 = i - t; // Unskew the cell origin back to (x,y,z) space\n    const Y0 = j - t;\n    const Z0 = k - t;\n    const x0 = x - X0; // The x,y,z distances from the cell origin\n    const y0 = y - Y0;\n    const z0 = z - Z0;\n    // For the 3D case, the simplex shape is a slightly irregular tetrahedron.\n    // Determine which simplex we are in.\n    let i1, j1, k1; // Offsets for second corner of simplex in (i,j,k) coords\n    let i2, j2, k2; // Offsets for third corner of simplex in (i,j,k) coords\n    if (x0 >= y0) {\n      if (y0 >= z0) {\n        i1 = 1;\n        j1 = 0;\n        k1 = 0;\n        i2 = 1;\n        j2 = 1;\n        k2 = 0;\n      } // X Y Z order\n      else if (x0 >= z0) {\n        i1 = 1;\n        j1 = 0;\n        k1 = 0;\n        i2 = 1;\n        j2 = 0;\n        k2 = 1;\n      } // X Z Y order\n      else {\n        i1 = 0;\n        j1 = 0;\n        k1 = 1;\n        i2 = 1;\n        j2 = 0;\n        k2 = 1;\n      } // Z X Y order\n    }\n    else { // x0<y0\n      if (y0 < z0) {\n        i1 = 0;\n        j1 = 0;\n        k1 = 1;\n        i2 = 0;\n        j2 = 1;\n        k2 = 1;\n      } // Z Y X order\n      else if (x0 < z0) {\n        i1 = 0;\n        j1 = 1;\n        k1 = 0;\n        i2 = 0;\n        j2 = 1;\n        k2 = 1;\n      } // Y Z X order\n      else {\n        i1 = 0;\n        j1 = 1;\n        k1 = 0;\n        i2 = 1;\n        j2 = 1;\n        k2 = 0;\n      } // Y X Z order\n    }\n    // A step of (1,0,0) in (i,j,k) means a step of (1-c,-c,-c) in (x,y,z),\n    // a step of (0,1,0) in (i,j,k) means a step of (-c,1-c,-c) in (x,y,z), and\n    // a step of (0,0,1) in (i,j,k) means a step of (-c,-c,1-c) in (x,y,z), where\n    // c = 1/6.\n    const x1 = x0 - i1 + G3; // Offsets for second corner in (x,y,z) coords\n    const y1 = y0 - j1 + G3;\n    const z1 = z0 - k1 + G3;\n    const x2 = x0 - i2 + 2.0 * G3; // Offsets for third corner in (x,y,z) coords\n    const y2 = y0 - j2 + 2.0 * G3;\n    const z2 = z0 - k2 + 2.0 * G3;\n    const x3 = x0 - 1.0 + 3.0 * G3; // Offsets for last corner in (x,y,z) coords\n    const y3 = y0 - 1.0 + 3.0 * G3;\n    const z3 = z0 - 1.0 + 3.0 * G3;\n    // Work out the hashed gradient indices of the four simplex corners\n    const ii = i & 255;\n    const jj = j & 255;\n    const kk = k & 255;\n    // Calculate the contribution from the four corners\n    let t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0;\n    if (t0 < 0) n0 = 0.0;\n    else {\n      const gi0 = permMod12[ii + perm[jj + perm[kk]]] * 3;\n      t0 *= t0;\n      n0 = t0 * t0 * (grad3[gi0] * x0 + grad3[gi0 + 1] * y0 + grad3[gi0 + 2] * z0);\n    }\n    let t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1;\n    if (t1 < 0) n1 = 0.0;\n    else {\n      const gi1 = permMod12[ii + i1 + perm[jj + j1 + perm[kk + k1]]] * 3;\n      t1 *= t1;\n      n1 = t1 * t1 * (grad3[gi1] * x1 + grad3[gi1 + 1] * y1 + grad3[gi1 + 2] * z1);\n    }\n    let t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2;\n    if (t2 < 0) n2 = 0.0;\n    else {\n      const gi2 = permMod12[ii + i2 + perm[jj + j2 + perm[kk + k2]]] * 3;\n      t2 *= t2;\n      n2 = t2 * t2 * (grad3[gi2] * x2 + grad3[gi2 + 1] * y2 + grad3[gi2 + 2] * z2);\n    }\n    let t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3;\n    if (t3 < 0) n3 = 0.0;\n    else {\n      const gi3 = permMod12[ii + 1 + perm[jj + 1 + perm[kk + 1]]] * 3;\n      t3 *= t3;\n      n3 = t3 * t3 * (grad3[gi3] * x3 + grad3[gi3 + 1] * y3 + grad3[gi3 + 2] * z3);\n    }\n    // Add contributions from each corner to get the final noise value.\n    // The result is scaled to stay just inside [-1,1]\n    return 32.0 * (n0 + n1 + n2 + n3);\n  }\n\n  /**\n   * Samples the noise field in 4 dimensions\n   * @param x \n   * @param y \n   * @param z \n   * @returns a number in the interval [-1, 1]\n   */\n  noise4D(x:number, y:number, z:number, w:number): number {\n    const perm = this.perm;\n\n    let n0, n1, n2, n3, n4; // Noise contributions from the five corners\n    // Skew the (x,y,z,w) space to determine which cell of 24 simplices we're in\n    const s = (x + y + z + w) * F4; // Factor for 4D skewing\n    const i = Math.floor(x + s);\n    const j = Math.floor(y + s);\n    const k = Math.floor(z + s);\n    const l = Math.floor(w + s);\n    const t = (i + j + k + l) * G4; // Factor for 4D unskewing\n    const X0 = i - t; // Unskew the cell origin back to (x,y,z,w) space\n    const Y0 = j - t;\n    const Z0 = k - t;\n    const W0 = l - t;\n    const x0 = x - X0; // The x,y,z,w distances from the cell origin\n    const y0 = y - Y0;\n    const z0 = z - Z0;\n    const w0 = w - W0;\n    // For the 4D case, the simplex is a 4D shape I won't even try to describe.\n    // To find out which of the 24 possible simplices we're in, we need to\n    // determine the magnitude ordering of x0, y0, z0 and w0.\n    // Six pair-wise comparisons are performed between each possible pair\n    // of the four coordinates, and the results are used to rank the numbers.\n    let rankx = 0;\n    let ranky = 0;\n    let rankz = 0;\n    let rankw = 0;\n    if (x0 > y0) rankx++;\n    else ranky++;\n    if (x0 > z0) rankx++;\n    else rankz++;\n    if (x0 > w0) rankx++;\n    else rankw++;\n    if (y0 > z0) ranky++;\n    else rankz++;\n    if (y0 > w0) ranky++;\n    else rankw++;\n    if (z0 > w0) rankz++;\n    else rankw++;\n    // simplex[c] is a 4-vector with the numbers 0, 1, 2 and 3 in some order.\n    // Many values of c will never occur, since e.g. x>y>z>w makes x<z, y<w and x<w\n    // impossible. Only the 24 indices which have non-zero entries make any sense.\n    // We use a thresholding to set the coordinates in turn from the largest magnitude.\n    // Rank 3 denotes the largest coordinate.\n    // Rank 2 denotes the second largest coordinate.\n    // Rank 1 denotes the second smallest coordinate.\n\n    // The integer offsets for the second simplex corner\n    const i1 = rankx >= 3 ? 1 : 0;\n    const j1 = ranky >= 3 ? 1 : 0;\n    const k1 = rankz >= 3 ? 1 : 0;\n    const l1 = rankw >= 3 ? 1 : 0;\n    // The integer offsets for the third simplex corner\n    const i2 = rankx >= 2 ? 1 : 0;\n    const j2 = ranky >= 2 ? 1 : 0;\n    const k2 = rankz >= 2 ? 1 : 0;\n    const l2 = rankw >= 2 ? 1 : 0;\n\n    // The integer offsets for the fourth simplex corner\n    const i3 = rankx >= 1 ? 1 : 0;\n    const j3 = ranky >= 1 ? 1 : 0;\n    const k3 = rankz >= 1 ? 1 : 0;\n    const l3 = rankw >= 1 ? 1 : 0;\n    // The fifth corner has all coordinate offsets = 1, so no need to compute that.\n    const x1 = x0 - i1 + G4; // Offsets for second corner in (x,y,z,w) coords\n    const y1 = y0 - j1 + G4;\n    const z1 = z0 - k1 + G4;\n    const w1 = w0 - l1 + G4;\n    const x2 = x0 - i2 + 2.0 * G4; // Offsets for third corner in (x,y,z,w) coords\n    const y2 = y0 - j2 + 2.0 * G4;\n    const z2 = z0 - k2 + 2.0 * G4;\n    const w2 = w0 - l2 + 2.0 * G4;\n    const x3 = x0 - i3 + 3.0 * G4; // Offsets for fourth corner in (x,y,z,w) coords\n    const y3 = y0 - j3 + 3.0 * G4;\n    const z3 = z0 - k3 + 3.0 * G4;\n    const w3 = w0 - l3 + 3.0 * G4;\n    const x4 = x0 - 1.0 + 4.0 * G4; // Offsets for last corner in (x,y,z,w) coords\n    const y4 = y0 - 1.0 + 4.0 * G4;\n    const z4 = z0 - 1.0 + 4.0 * G4;\n    const w4 = w0 - 1.0 + 4.0 * G4;\n    // Work out the hashed gradient indices of the five simplex corners\n    const ii = i & 255;\n    const jj = j & 255;\n    const kk = k & 255;\n    const ll = l & 255;\n    // Calculate the contribution from the five corners\n    let t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0 - w0 * w0;\n    if (t0 < 0) n0 = 0.0;\n    else {\n      const gi0 = (perm[ii + perm[jj + perm[kk + perm[ll]]]] % 32) * 4;\n      t0 *= t0;\n      n0 = t0 * t0 * (grad4[gi0] * x0 + grad4[gi0 + 1] * y0 + grad4[gi0 + 2] * z0 + grad4[gi0 + 3] * w0);\n    }\n    let t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1 - w1 * w1;\n    if (t1 < 0) n1 = 0.0;\n    else {\n      const gi1 = (perm[ii + i1 + perm[jj + j1 + perm[kk + k1 + perm[ll + l1]]]] % 32) * 4;\n      t1 *= t1;\n      n1 = t1 * t1 * (grad4[gi1] * x1 + grad4[gi1 + 1] * y1 + grad4[gi1 + 2] * z1 + grad4[gi1 + 3] * w1);\n    }\n    let t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2 - w2 * w2;\n    if (t2 < 0) n2 = 0.0;\n    else {\n      const gi2 = (perm[ii + i2 + perm[jj + j2 + perm[kk + k2 + perm[ll + l2]]]] % 32) * 4;\n      t2 *= t2;\n      n2 = t2 * t2 * (grad4[gi2] * x2 + grad4[gi2 + 1] * y2 + grad4[gi2 + 2] * z2 + grad4[gi2 + 3] * w2);\n    }\n    let t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3 - w3 * w3;\n    if (t3 < 0) n3 = 0.0;\n    else {\n      const gi3 = (perm[ii + i3 + perm[jj + j3 + perm[kk + k3 + perm[ll + l3]]]] % 32) * 4;\n      t3 *= t3;\n      n3 = t3 * t3 * (grad4[gi3] * x3 + grad4[gi3 + 1] * y3 + grad4[gi3 + 2] * z3 + grad4[gi3 + 3] * w3);\n    }\n    let t4 = 0.6 - x4 * x4 - y4 * y4 - z4 * z4 - w4 * w4;\n    if (t4 < 0) n4 = 0.0;\n    else {\n      const gi4 = (perm[ii + 1 + perm[jj + 1 + perm[kk + 1 + perm[ll + 1]]]] % 32) * 4;\n      t4 *= t4;\n      n4 = t4 * t4 * (grad4[gi4] * x4 + grad4[gi4 + 1] * y4 + grad4[gi4 + 2] * z4 + grad4[gi4 + 3] * w4);\n    }\n    // Sum up and scale the result to cover the range [-1,1]\n    return 27.0 * (n0 + n1 + n2 + n3 + n4);\n  }\n}\nexport default SimplexNoise;\n\n/**\n * Builds a random permutation table.\n * This is exported only for (internal) testing purposes.\n * Do not rely on this export.\n * @private\n */\nexport function buildPermutationTable(random: RandomFn): Uint8Array {\n  const p = new Uint8Array(256);\n  for (let i = 0; i < 256; i++) {\n    p[i] = i;\n  }\n  for (let i = 0; i < 255; i++) {\n    const r = i + ~~(random() * (256 - i));\n    const aux = p[i];\n    p[i] = p[r];\n    p[r] = aux;\n  }\n  return p;\n}\n\n/*\nThe ALEA PRNG and masher code used by simplex-noise.js\nis based on code by Johannes Baagøe, modified by Jonas Wagner.\nSee alea.md for the full license.\n*/\nfunction alea(seed: string|number): RandomFn {\n  let s0 = 0;\n  let s1 = 0;\n  let s2 = 0;\n  let c = 1;\n\n  const mash = masher();\n  s0 = mash(' ');\n  s1 = mash(' ');\n  s2 = mash(' ');\n\n  s0 -= mash(seed);\n  if (s0 < 0) {\n    s0 += 1;\n  }\n  s1 -= mash(seed);\n  if (s1 < 0) {\n    s1 += 1;\n  }\n  s2 -= mash(seed);\n  if (s2 < 0) {\n    s2 += 1;\n  }\n\n  return function() {\n    const t = 2091639 * s0 + c * 2.3283064365386963e-10; // 2^-32\n    s0 = s1;\n    s1 = s2;\n    return s2 = t - (c = t | 0);\n  };\n}\n\nfunction masher() {\n  let n = 0xefc8249d;\n  return function(data: number|string) {\n    data = data.toString();\n    for (let i = 0; i < data.length; i++) {\n      n += data.charCodeAt(i);\n      let h = 0.02519603282416938 * n;\n      n = h >>> 0;\n      h -= n;\n      h *= n;\n      n = h >>> 0;\n      h -= n;\n      n += h * 0x100000000; // 2^32\n    }\n    return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n  };\n}","let wasm,cachedTextDecoder=new TextDecoder(\"utf-8\",{ignoreBOM:!0,fatal:!0});cachedTextDecoder.decode();let cachegetUint8Memory0=null;function getUint8Memory0(){return null!==cachegetUint8Memory0&&cachegetUint8Memory0.buffer===wasm.memory.buffer||(cachegetUint8Memory0=new Uint8Array(wasm.memory.buffer)),cachegetUint8Memory0}function getStringFromWasm0(e,t){return cachedTextDecoder.decode(getUint8Memory0().subarray(e,e+t))}const heap=new Array(32).fill(void 0);heap.push(void 0,null,!0,!1);let heap_next=heap.length;function addHeapObject(e){heap_next===heap.length&&heap.push(heap.length+1);const t=heap_next;return heap_next=heap[t],heap[t]=e,t}function getObject(e){return heap[e]}function dropObject(e){e<36||(heap[e]=heap_next,heap_next=e)}function takeObject(e){const t=getObject(e);return dropObject(e),t}let WASM_VECTOR_LEN=0,cachedTextEncoder=new TextEncoder(\"utf-8\");const encodeString=\"function\"==typeof cachedTextEncoder.encodeInto?function(e,t){return cachedTextEncoder.encodeInto(e,t)}:function(e,t){const n=cachedTextEncoder.encode(e);return t.set(n),{read:e.length,written:n.length}};function passStringToWasm0(e,t,n){if(void 0===n){const n=cachedTextEncoder.encode(e),r=t(n.length);return getUint8Memory0().subarray(r,r+n.length).set(n),WASM_VECTOR_LEN=n.length,r}let r=e.length,a=t(r);const o=getUint8Memory0();let s=0;for(;s<r;s++){const t=e.charCodeAt(s);if(t>127)break;o[a+s]=t}if(s!==r){0!==s&&(e=e.slice(s)),a=n(a,r,r=s+3*e.length);const t=getUint8Memory0().subarray(a+s,a+r);s+=encodeString(e,t).written}return WASM_VECTOR_LEN=s,a}function isLikeNone(e){return null==e}let cachegetInt32Memory0=null;function getInt32Memory0(){return null!==cachegetInt32Memory0&&cachegetInt32Memory0.buffer===wasm.memory.buffer||(cachegetInt32Memory0=new Int32Array(wasm.memory.buffer)),cachegetInt32Memory0}function passArray8ToWasm0(e,t){const n=t(1*e.length);return getUint8Memory0().set(e,n/1),WASM_VECTOR_LEN=e.length,n}function getArrayU8FromWasm0(e,t){return getUint8Memory0().subarray(e/1,e/1+t)}export function compressGzip(e){try{const o=wasm.__wbindgen_add_to_stack_pointer(-16);var t=passArray8ToWasm0(e,wasm.__wbindgen_malloc),n=WASM_VECTOR_LEN;wasm.compressGzip(o,t,n);var r=getInt32Memory0()[o/4+0],a=getInt32Memory0()[o/4+1];let s;return 0!==r&&(s=getArrayU8FromWasm0(r,a).slice(),wasm.__wbindgen_free(r,1*a)),s}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}export function decompressGzip(e){try{const o=wasm.__wbindgen_add_to_stack_pointer(-16);var t=passArray8ToWasm0(e,wasm.__wbindgen_malloc),n=WASM_VECTOR_LEN;wasm.decompressGzip(o,t,n);var r=getInt32Memory0()[o/4+0],a=getInt32Memory0()[o/4+1];let s;return 0!==r&&(s=getArrayU8FromWasm0(r,a).slice(),wasm.__wbindgen_free(r,1*a)),s}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}export function compressStringGzip(e){try{const o=wasm.__wbindgen_add_to_stack_pointer(-16);var t=passStringToWasm0(e,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),n=WASM_VECTOR_LEN;wasm.compressStringGzip(o,t,n);var r=getInt32Memory0()[o/4+0],a=getInt32Memory0()[o/4+1];let s;return 0!==r&&(s=getArrayU8FromWasm0(r,a).slice(),wasm.__wbindgen_free(r,1*a)),s}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}export function decompressStringGzip(e){try{const o=wasm.__wbindgen_add_to_stack_pointer(-16);var t=passArray8ToWasm0(e,wasm.__wbindgen_malloc),n=WASM_VECTOR_LEN;wasm.decompressStringGzip(o,t,n);var r=getInt32Memory0()[o/4+0],a=getInt32Memory0()[o/4+1];let s;return 0!==r&&(s=getStringFromWasm0(r,a).slice(),wasm.__wbindgen_free(r,1*a)),s}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}let stack_pointer=32;function addBorrowedObject(e){if(1==stack_pointer)throw new Error(\"out of js stack\");return heap[--stack_pointer]=e,stack_pointer}export function compressJsonGzip(e){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.compressJsonGzip(a,addBorrowedObject(e));var t=getInt32Memory0()[a/4+0],n=getInt32Memory0()[a/4+1],r=getArrayU8FromWasm0(t,n).slice();return wasm.__wbindgen_free(t,1*n),r}finally{wasm.__wbindgen_add_to_stack_pointer(16),heap[stack_pointer++]=void 0}}export function decompressJsonGzip(e){var t=passArray8ToWasm0(e,wasm.__wbindgen_malloc),n=WASM_VECTOR_LEN;return takeObject(wasm.decompressJsonGzip(t,n))}function handleError(e){return function(){try{return e.apply(this,arguments)}catch(e){wasm.__wbindgen_exn_store(addHeapObject(e))}}}async function load(e,t){if(\"function\"==typeof Response&&e instanceof Response){if(\"function\"==typeof WebAssembly.instantiateStreaming)try{return await WebAssembly.instantiateStreaming(e,t)}catch(t){if(\"application/wasm\"==e.headers.get(\"Content-Type\"))throw t;console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\",t)}const n=await e.arrayBuffer();return await WebAssembly.instantiate(n,t)}{const n=await WebAssembly.instantiate(e,t);return n instanceof WebAssembly.Instance?{instance:n,module:e}:n}}async function init(e){void 0===e&&(e=import.meta.url.replace(/\\.js$/,\"_bg.wasm\"));const t={wbg:{}};t.wbg.__wbindgen_string_new=function(e,t){return addHeapObject(getStringFromWasm0(e,t))},t.wbg.__wbg_parse_58b7cdbfa2b3e55a=handleError((function(e,t){return addHeapObject(JSON.parse(getStringFromWasm0(e,t)))})),t.wbg.__wbindgen_object_drop_ref=function(e){takeObject(e)},t.wbg.__wbg_stringify_e5f075a4462d77f0=handleError((function(e){return addHeapObject(JSON.stringify(getObject(e)))})),t.wbg.__wbindgen_string_get=function(e,t){const n=getObject(t);var r=\"string\"==typeof n?n:void 0,a=isLikeNone(r)?0:passStringToWasm0(r,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),o=WASM_VECTOR_LEN;getInt32Memory0()[e/4+1]=o,getInt32Memory0()[e/4+0]=a},t.wbg.__wbindgen_throw=function(e,t){throw new Error(getStringFromWasm0(e,t))},t.wbg.__wbindgen_rethrow=function(e){throw takeObject(e)},(\"string\"==typeof e||\"function\"==typeof Request&&e instanceof Request||\"function\"==typeof URL&&e instanceof URL)&&(e=fetch(e));const{instance:n,module:r}=await load(await e,t);return wasm=n.exports,init.__wbindgen_wasm_module=r,wasm}export default init;","module.exports = require('./helpers/bundle-url').getBundleURL('6C7OB') + require('./helpers/bundle-manifest').resolve(\"3fypB\");","\"use strict\";\n\nvar bundleURL = {};\n\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n\n  return value;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;"],"names":["$dd158b8c48ab0558$export$357eb1b4f03c1402","$dd158b8c48ab0558$export$40339995e8a21591","$dd158b8c48ab0558$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$1ecf3f146c5c58b2$var$functionSandbox","create","assign","$bdDKe","$aPuwP","expose","$86c217625a55c9b1$export$d8d02415fc49efaf","Symbol","val","$86c217625a55c9b1$export$1ecf11da0653b15","Map","$86c217625a55c9b1$var$isObject","serialize","obj","port2","port","target","value","isError","message","name","stack","serialized","ep","self","callback","ev","data","path","slice","reduce","obj1","prop","rawValue","$86c217625a55c9b1$var$fromWireValue","apply","parent","argumentList","$86c217625a55c9b1$export$6050fdfd7148dfa5","returnValue","$86c217625a55c9b1$export$b9dae3741aad8f45","port1","undefined","$86c217625a55c9b1$var$throwMarker","Promise","resolve","catch","then","returnValue1","wireValue","transferables","$86c217625a55c9b1$var$toWireValue","postMessage","type","removeEventListener","$86c217625a55c9b1$var$closeEndPoint","start","endpoint","constructor","close","isReleased","Proxy","isProxyReleased","$86c217625a55c9b1$var$requestResponseMessage","map","p","toString","r","bind","_target","$86c217625a55c9b1$var$throwIfProxyReleased","_thisArg","rawArgumentList","last","$86c217625a55c9b1$export$11baf933bdbbf78e","$86c217625a55c9b1$var$createProxy","$86c217625a55c9b1$var$processArguments","construct","proxy","processed","arr","Array","prototype","concat","$86c217625a55c9b1$var$transferCache","WeakMap","transfers","set","serializedValue","handler","get","deserialize","msg","$3b38cdd679ce1b0b$var$simplexNoise","$3UAYY","default","$3b38cdd679ce1b0b$var$MATRICES","$3b38cdd679ce1b0b$var$euclidianMod","a","b","$3b38cdd679ce1b0b$var$noiseMapCache","noiseMapCache","$3b38cdd679ce1b0b$export$c332fad5c1d1e479","object","$3b38cdd679ce1b0b$var$getBlockType","x","y","blockY","z","randomizer","Math","random","$3b38cdd679ce1b0b$export$4e4562ed55237aff","chunk","chunkSize","seeds","stringifiedChunkXZ","join","terrain","offsetX","offsetY","width","height","octave","array","Int16Array","divisor","transformedX","transformedY","noise2D","$3b38cdd679ce1b0b$var$noiseMap","colliderBoxBuffer","$csz24","ObjectBuffer","Int8Array","terrainFaceBuffer","waterFaceBuffer","colliderJumpTable","heightBoundaries","push","used","minY","facesPlaced","index","faceId","direction","floor","noise3D","round","seri","$lJ0z6","URL","old","performance","now","compressGzip","Uint8Array","buffer","$3b38cdd679ce1b0b$export$d572fae7ff3553fd","chunks","objects","$0d7f1c58b37857ad$export$b43d1c834b9679cb","Class","items1","isShared","values","this","createBuffer","transfer","size","ArrayBuffer","$0d7f1c58b37857ad$export$67340d735b0335f3","TypedArrayClass","maxLength","ceil","view","BYTES_PER_ELEMENT","items","SharedArrayBuffer","typedArray","$2d934a05ae5cc6b8$var$F2","sqrt","$2d934a05ae5cc6b8$var$G2","$2d934a05ae5cc6b8$var$G3","$2d934a05ae5cc6b8$var$F4","$2d934a05ae5cc6b8$var$G4","$2d934a05ae5cc6b8$var$grad3","Float32Array","$2d934a05ae5cc6b8$var$grad4","$2d934a05ae5cc6b8$export$9099ad97b570f7c","randomOrSeed","seed","s0","s1","s2","c","mash","n","i1","charCodeAt","h","$2d934a05ae5cc6b8$var$masher","t","$2d934a05ae5cc6b8$var$alea","random1","i2","aux","$2d934a05ae5cc6b8$export$82b03066fff32e85","perm","permMod12","n0","n1","n2","s","j","x0","y0","i11","j1","x1","y1","x2","y2","ii","jj","t0","gi0","t1","gi1","t2","gi2","n3","k","z0","k1","j2","k2","z1","z2","x3","y3","z3","kk","t3","gi3","noise4D","w","n4","l","w0","rankx","ranky","rankz","rankw","l1","l2","i3","j3","k3","l3","w1","w2","w3","x4","y4","z4","w4","ll","t4","gi4","$fd0e3d2831734c6c$var$wasm","$fd0e3d2831734c6c$var$cachedTextDecoder","TextDecoder","ignoreBOM","fatal","decode","$fd0e3d2831734c6c$var$cachegetUint8Memory0","$fd0e3d2831734c6c$var$getUint8Memory0","memory","$fd0e3d2831734c6c$var$getStringFromWasm0","e","subarray","$fd0e3d2831734c6c$var$heap","fill","$fd0e3d2831734c6c$var$heap_next","$fd0e3d2831734c6c$var$addHeapObject","$fd0e3d2831734c6c$var$getObject","$fd0e3d2831734c6c$var$takeObject","$fd0e3d2831734c6c$var$dropObject","$fd0e3d2831734c6c$var$WASM_VECTOR_LEN","$fd0e3d2831734c6c$var$cachedTextEncoder","TextEncoder","$fd0e3d2831734c6c$var$encodeString","encodeInto","encode","read","written","$fd0e3d2831734c6c$var$passStringToWasm0","o","$fd0e3d2831734c6c$var$cachegetInt32Memory0","$fd0e3d2831734c6c$var$getInt32Memory0","Int32Array","$fd0e3d2831734c6c$var$passArray8ToWasm0","$fd0e3d2831734c6c$var$getArrayU8FromWasm0","$fd0e3d2831734c6c$export$bc7674d682af837c","__wbindgen_add_to_stack_pointer","__wbindgen_malloc","__wbindgen_free","$fd0e3d2831734c6c$var$handleError","arguments","e1","__wbindgen_exn_store","$fd0e3d2831734c6c$export$9099ad97b570f7c","$fd0e3d2831734c6c$var$init","replace","wbg","__wbindgen_string_new","__wbg_parse_58b7cdbfa2b3e55a","__wbindgen_object_drop_ref","__wbg_stringify_e5f075a4462d77f0","stringify","__wbindgen_string_get","$fd0e3d2831734c6c$var$isLikeNone","__wbindgen_realloc","__wbindgen_throw","__wbindgen_rethrow","Request","fetch","instance","module","Response","WebAssembly","instantiateStreaming","headers","console","warn","arrayBuffer","instantiate","Instance","$fd0e3d2831734c6c$var$load","exports","__wbindgen_wasm_module","getBundleURL","$d10ac90939ea811c$export$da289beea9c5b10d","$d10ac90939ea811c$var$bundleURL","$d10ac90939ea811c$var$getBaseURL","url","err","matches","match","$d10ac90939ea811c$var$getBundleURL"],"version":3,"file":"worker.1fc3db97.js.map"}